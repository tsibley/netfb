#!/bin/bash
set -euo pipefail

: ${SCREEN_GEOMETRY:=$(fbset --info | perl -anle 'print "$F[1]x$F[2]" and last if /geometry/')}
: ${BACKGROUND_COLOR:=black}

main() {
    local fb="${1:-/dev/fb0}"

    # It's much faster to write the image to disk between steps.
    tga="$(mktemp)"
    trap 'rm "$tga"' EXIT

    generate-tga "$tga"
    blit-tga-to-framebuffer "$tga" "$fb"
}

generate-tga() {
    local tga="$1"
    report "ðŸ–¼ Generating bitmap"
    composite \
        -gravity center \
        -alpha opaque \
        <(convert-input) \
        <(generate-background) \
        tga:"$tga"
}

blit-tga-to-framebuffer() {
    local tga="$1"
    local fb="$2"

    report "ðŸ—² Blitting bitmap to framebuffer"

    # The .tga files produced by our ImageMagick pipeline have an 18 byte
    # header before the image data which can be written directly to the
    # framebuffer.
    dd if="$tga" iflag=skip_bytes skip=18 of="$fb" status=none
}

convert-input() {
    # XXX TODO: explain -flip!
    convert - \
        -auto-orient \
        -geometry "$SCREEN_GEOMETRY>" \
        -flip \
        png:-
}

generate-background() {
    convert -size "$SCREEN_GEOMETRY" canvas:"$BACKGROUND_COLOR" png:-
}

report() {
    echo "$@"
}

main "$@"
